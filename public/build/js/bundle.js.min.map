{"version":3,"sources":["horas.js","ponentes.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","terminoBusqueda","e","target","name","value","horaPrevia","classList","remove","Object","values","includes","async","url","resultado","fetch","eventos","json","console","log","listadoHoras","forEach","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","addEventListener","seleccionarHora","obtenerHorasDisponibles","buscarEventos","ponentesInput","ponentes","ponentesFiltrados","listadoPonentes","ponenteHidden","seleccionarPonente","ponente","ponentePrevio","ponenteId","respuesta","arrayPonentes","nombre","trim","apellido","id","formatearPonentes","obtenerPonentes","length","expresion","RegExp","toLowerCase","search","firstChild","removeChild","ponenteHTML","createElement","textContent","onclick","appendChild","noResultados","mostrarPonentes","obtenerPonente","ponenteDOM","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","tag","etiqueta","ondblclick","eliminarTag","actualizarInputHidden","toString","split","keyCode","velue","preventDefault"],"mappings":"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","file":"bundle.js","sourcesContent":["(function() {\r\n    const horas = document.querySelector('#horas');\r\n\r\n    if(horas) {\r\n        let busqueda = {\r\n            categoria_id: '',\r\n            dia: '',\r\n        }\r\n\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\r\n\r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            // Reiniciar los campos ocultos y el selector de horas\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n            \r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n\r\n            if(horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada')\r\n            }\r\n\r\n            if(Object.values(busqueda).includes('')) {\r\n                return\r\n            }\r\n\r\n            buscarEventos();\r\n        }\r\n\r\n        async function buscarEventos() {\r\n            const {dia, categoria_id} = busqueda;\r\n            const url = `/api/eventos-horario?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n\r\n            console.log(eventos);\r\n\r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos) {\r\n            // Reiniciar las horas\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitada'))\r\n\r\n            // Comprobar eventos ya tomados, y quitar la variable de deshabilitado\r\n            const horasTomadas = eventos.map( evento => evento.hora_id);            \r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n\r\n            const resultado = listadoHorasArray.filter( li =>  !horasTomadas.includes(li.dataset.horaId) );\r\n            resultado.forEach( li => li.classList.remove('horas__hora--deshabilitada'))\r\n\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitada)');\r\n            horasDisponibles.forEach( hora => hora.addEventListener('click', seleccionarHora));\r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n            // Deshabilitar la hora previa, si hay un nuevo click\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada')\r\n            if(horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada')\r\n            }\r\n\r\n            // Agregar clase de seleccionado\r\n            e.target.classList.add('horas__hora--seleccionada')\r\n\r\n            inputHiddenHora.value = e.target.dataset.horaId\r\n\r\n            // Llenar el campo oculto de dia\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value\r\n        }\r\n    }\r\n})();","(function(){\r\n    const ponentesInput = document.querySelector('#ponentes');\r\n\r\n    if(ponentesInput) {\r\n        let ponentes = [];\r\n        let ponentesFiltrados = [];\r\n\r\n        const listadoPonentes = document.querySelector('#listado-ponentes')\r\n        const ponenteHidden = document.querySelector('[name=\"ponente_id\"]')\r\n\r\n        obtenerPonentes();\r\n        ponentesInput.addEventListener('input', buscarPonentes)\r\n\r\n        if(ponenteHidden.value) {\r\n           (async() => {\r\n                const ponente = await obtenerPonente(ponenteHidden.value)\r\n                const {nombre, apellido} = ponente\r\n\r\n                // Insertar en el HTML\r\n                const ponenteDOM = document.createElement('LI');\r\n                ponenteDOM.classList.add('listado-ponentes__ponente', 'listado-ponentes__ponente--seleccionado');\r\n                ponenteDOM.textContent = `${nombre} ${apellido}`\r\n\r\n                listadoPonentes.appendChild(ponenteDOM)\r\n           })()\r\n        }\r\n\r\n        async function obtenerPonentes() {\r\n            const url = `/api/ponentes`;\r\n            const respuesta = await fetch(url);\r\n            const resultado = await respuesta.json();\r\n            formatearPonentes(resultado)\r\n        }\r\n\r\n        async function obtenerPonente(id) {\r\n            const url = `/api/ponente?id=${id}`;\r\n            const respuesta = await fetch(url)\r\n            const resultado = await respuesta.json()\r\n            return resultado;\r\n        }\r\n\r\n        function formatearPonentes(arrayPonentes = []) {\r\n            ponentes = arrayPonentes.map( ponente => {\r\n                return {\r\n                    nombre: `${ponente.nombre.trim()} ${ponente.apellido.trim()}`,\r\n                    id: ponente.id\r\n                } \r\n            })\r\n        }\r\n\r\n        function buscarPonentes(e) {\r\n            const busqueda = e.target.value;\r\n\r\n            if(busqueda.length > 3) {\r\n                const expresion = new RegExp(busqueda, \"i\");\r\n                ponentesFiltrados = ponentes.filter(ponente => {\r\n                    if(ponente.nombre.toLowerCase().search(expresion) != -1) {\r\n                        return ponente\r\n                    }\r\n                })\r\n            } else {\r\n                ponentesFiltrados = []\r\n            }\r\n\r\n            mostrarPonentes();\r\n        }\r\n\r\n        function mostrarPonentes() {\r\n\r\n            while(listadoPonentes.firstChild) {\r\n                listadoPonentes.removeChild(listadoPonentes.firstChild)\r\n            }\r\n\r\n            if(ponentesFiltrados.length > 0) {\r\n                ponentesFiltrados.forEach(ponente => {\r\n                    const ponenteHTML = document.createElement('LI');\r\n                    ponenteHTML.classList.add('listado-ponentes__ponente')\r\n                    ponenteHTML.textContent = ponente.nombre;\r\n                    ponenteHTML.dataset.ponenteId = ponente.id\r\n                    ponenteHTML.onclick = seleccionarPonente\r\n\r\n                    // Añadir al dom\r\n                    listadoPonentes.appendChild(ponenteHTML)\r\n                })\r\n            } else {\r\n                const noResultados = document.createElement('P')\r\n                noResultados.classList.add('listado-ponentes__no-resultado')\r\n                noResultados.textContent = 'No hay resultados para tu búsqueda'\r\n                listadoPonentes.appendChild(noResultados)              \r\n            }\r\n        }\r\n\r\n        function seleccionarPonente(e) {\r\n            const ponente = e.target;\r\n\r\n            // Remover la clase previa\r\n            const ponentePrevio = document.querySelector('.listado-ponentes__ponente--seleccionado')\r\n            if(ponentePrevio) {\r\n                ponentePrevio.classList.remove('listado-ponentes__ponente--seleccionado')\r\n            }\r\n            ponente.classList.add('listado-ponentes__ponente--seleccionado')\r\n\r\n            ponenteHidden.value = ponente.dataset.ponenteId\r\n        }\r\n    }\r\n})();","(function() { // IFFI\r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    if(tagsInput) {\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n        let tags = [];\r\n\r\n        // Recuperar del input oculto\r\n        if(tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        // Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag)\r\n\r\n        function guardarTag(e) {\r\n            if(e.keyCode === 44) {\r\n                if(e.target.value.trim() === '' || e.target.velue < 1) {\r\n                    return;\r\n                }\r\n\r\n                e.preventDefault();\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value = '';\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                const etiqueta = document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.ondblclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            })\r\n\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function eliminarTag(e) {\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag != e.target.textContent);\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n})()"]}